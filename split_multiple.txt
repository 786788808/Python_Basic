import os
import pytest
from unittest.mock import patch
import json

def test_parse_file():
    """测试parse_file函数"""
    
    # 1. 获取当前文件所在目录
    current_dir = os.getcwd()
    
    # 2. 构建测试数据目录路径
    mock_data_dir = os.path.join(current_dir, "tests", "test_dags", "app", "mock_data", "HKEx_Suspension")
    
    # 3. 确保目录存在
    os.makedirs(mock_data_dir, exist_ok=True)
    
    # 4. 准备配置
    config = HKExSuspConfig(
        gcp_env='dev',
        order_date='20250701',
        from_date='20250701',
        to_date='20250701'
    )
    
    # 5. 设置文件路径
    test_files = {
        'TradingHalt': 'TradingHalt_20250701.html',
        'Suspension': 'Suspension_20250701.html',
        'Resumption': 'Resumption_20250701.html'
    }
    
    # 6. 设置配置的文件路径
    config.html_paths = [os.path.join(mock_data_dir, file_name) for file_name in test_files.values()]
    config.csv_paths = [os.path.join(mock_data_dir, file_name.replace('.html', '.csv')) 
                       for file_name in test_files.values()]
    
    # 打印调试信息
    print("\nTest Configuration:")
    print(f"Current directory: {current_dir}")
    print(f"Mock data directory: {mock_data_dir}")
    print(f"HTML paths: {config.html_paths}")
    print(f"Files exist:")
    for path in config.html_paths:
        print(f"  {path}: {os.path.exists(path)}")
    
    # 7. 执行测试
    try:
        result = parse_file(config, '20250701', '20250701')
        assert result is not None
        print("\nTest passed: parse_file returned result")
        
    except Exception as e:
        print(f"\nError during test execution: {str(e)}")
        raise
