@patch('builtins.open')
@patch('requests.get')
@patch('os.path.exists')
@patch('os.makedirs')
def test_web_crawler(mock_makedirs, mock_exists, mock_get, mock_open):
    # Mock os.path.exists 返回 True
    mock_exists.return_value = True
    
    # 准备 XML 内容
    xml_content = b"<xml>test</xml>"
    
    # Mock 请求响应
    mock_response = Mock()
    mock_response.status_code = 200
    mock_response.content = xml_content
    mock_get.return_value = mock_response
    
    # Mock 文件操作
    mock_files = {
        'env.json': json.dumps(MOCK_ENV_CONFIG),  # 直接返回 JSON 字符串
        'xml': Mock()  # XML 文件仍然需要 Mock 来支持 write
    }
    
    class MockOpen:
        def __init__(self, read_data):
            self.read_data = read_data
        def __enter__(self):
            return self
        def __exit__(self, *args):
            return None
        def read(self):
            return self.read_data
        def write(self, data):
            pass
    
    def open_side_effect(*args, **kwargs):
        if str(args[0]).endswith('env.json'):
            return MockOpen(mock_files['env.json'])
        else:
            return MockOpen("")
    
    mock_open.side_effect = open_side_effect

    config = SanctionConfig('dev', '20250704')
    result = web_crawler(config)
    assert result is True
