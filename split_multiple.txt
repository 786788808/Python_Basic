@patch('builtins.open')
@patch('requests.get')
@patch('os.path.exists')
@patch('os.makedirs')
def test_web_crawler(mock_makedirs, mock_exists, mock_get, mock_open):
    # Mock os.path.exists 返回 True
    mock_exists.return_value = True
    
    # 准备 XML 内容
    xml_content = b"<xml>test</xml>"
    
    # Mock 请求响应
    mock_response = Mock()
    mock_response.status_code = 200
    mock_response.content = xml_content
    mock_get.return_value = mock_response
    
    # Mock 文件操作
    def open_side_effect(*args, **kwargs):
        mock_file = Mock()
        if str(args[0]).endswith('env.json'):
            mock_file.read.return_value = json.dumps(MOCK_ENV_CONFIG)
        elif str(args[0]).endswith('.xml'):
            mock_file.write = Mock()
        return Mock(__enter__=Mock(return_value=mock_file),
                   __exit__=Mock(return_value=None))
    
    mock_open.side_effect = open_side_effect

    config = SanctionConfig('dev', '20250704')
    result = web_crawler(config)
    assert result is True
