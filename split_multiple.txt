@patch('builtins.open')
@patch('requests.get')
@patch('os.path.exists')
@patch('os.makedirs')
def test_web_crawler(mock_makedirs, mock_exists, mock_get, mock_open):
    # Mock os.path.exists 返回 True
    mock_exists.return_value = True
    
    # Mock 请求响应
    mock_response = Mock()
    mock_response.status_code = 200
    mock_response.content = b"<xml>test</xml>"
    mock_get.return_value = mock_response
    
    # 处理文件读写
    read_data_mapping = {
        'env.json': json.dumps(MOCK_ENV_CONFIG),
        'xml': ''
    }
    
    def fake_open(*args, **kwargs):
        filepath = str(args[0])
        mode = kwargs.get('mode', 'r')
        
        m = mock_open()
        handle = m.return_value
        
        if 'env.json' in filepath:
            if 'b' in mode:
                handle.read.return_value = read_data_mapping['env.json'].encode('utf-8')
            else:
                handle.read.return_value = read_data_mapping['env.json']
        else:
            handle.read.return_value = read_data_mapping['xml']
            
        return handle
    
    mock_open.side_effect = fake_open

    config = SanctionConfig('dev', '20250704')
    result
