current_dir = os.path.dirname(os.path.abspath(__file__))
xml_path = os.path.join(current_dir, 'mock_data', 'Webs_US_Sanction.xml')
print("xml_path used in test:", xml_path)

xml_path = os.environ.get('XML_PATH') or os.path.join(current_dir, 'mock_data', 'Webs_US_Sanction.xml')

import os
import pandas as pd
from Webs_US_Sanction import parse_file

class TestConfig:
    def __init__(self, xml_path, csv_path, file_date='20250704', order_date='20250704', gcp_env='dev'):
        self.file_path = xml_path
        self.csv_path = csv_path
        self.file_date = file_date
        self.order_date = order_date
        self.gcp_env = gcp_env

def test_parse_file_with_sample():
    current_dir = os.path.dirname(os.path.abspath(__file__))
    # 优先用环境变量，否则用默认路径
    xml_path = os.environ.get('XML_PATH') or os.path.join(current_dir, 'mock_data', 'Webs_US_Sanction.xml')
    csv_path = os.path.join(current_dir, 'mock_data', 'Webs_US_Sanction_test_output.csv')
    print("xml_path used in test:", xml_path)
    assert os.path.exists(xml_path), f"XML file not found: {xml_path}"

    config = TestConfig(xml_path, csv_path)
    parse_file(config)

    assert os.path.exists(csv_path)
    df = pd.read_csv(csv_path, sep='|')
    assert 'EntityName' in df.columns
    assert 'SanctionProgram' in df.columns
    os.remove(csv_path)
